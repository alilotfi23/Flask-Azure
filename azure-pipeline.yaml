trigger:
  - main

variables:
  # Container registry service connection established during pipeline creation
  acrName: 'myacr123.azurecr.io'
  acrServiceConnection: 'acr-service-connection'
  aksServiceConnection: 'aks-service-connection'
  resourceGroup: 'myResourceGroup'
  aksClusterName: 'myAKSCluster'
  imageRepository: 'flask-app'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
stages:
- stage: Build
  displayName: Build and Push Stage
  jobs:
  - job: Build
    displayName: Build Job
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build and Push
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(acrServiceConnection)
        tags: |
          $(tag)
          latest

- stage: Deploy
  displayName: Deploy Stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy to AKS
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            inputs:
              action: createSecret
              kubernetesServiceConnection: $(aksServiceConnection)
              namespace: default
              secretType: dockerRegistry
              secretName: acr-secret
              dockerRegistryEndpoint: $(acrServiceConnection)

          - task: KubernetesManifest@0
            inputs:
              action: deploy
              kubernetesServiceConnection: $(aksServiceConnection)
              manifests: |
                $(Pipeline.Workspace)/k8s/deployment.yaml
                $(Pipeline.Workspace)/k8s/service.yaml
              containers: |
                $(acrName)/$(imageRepository):$(tag)
